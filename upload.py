import os
import glob
import pandas as pd

def create_shopee_csv():
    """
    將已爬取的商品資訊，填入指定的蝦皮表格欄位，並輸出 CSV。
    """

    #--------------------------------------------------
    # 1. 前面已抓到的資訊 (請自行整合或傳參數)
    #--------------------------------------------------
    category = "零食/點心"                # 分類 (請自行設定或爬取) 
    product_name = "｜晨一鮮食｜ 嚴選新社香菇 好吃不乾硬 超好吃的素食肉乾😍 紅燒香菇頭150g【全素】"
    product_desc = """🎊🎊終於找到一款，好吃又不乾硬的素食肉乾
小編一吃到就震驚了😂😂
吃來吃去就是這一包，真的超~好~吃~

⭐⭐獨家製作紅燒口味⭐⭐
多種香料調配出㊙獨門配方
一入口就炸💥出滿滿香氣
🤤口水停不下來，只想一口接一口


💡嚴選台中新社超大朵香菇🍄，乾燥後剪下香菇頭
經過敲打，使香菇頭纖維變鬆散
所以吃起來有嚼勁，但是不會🆖又乾又硬
紅燒調味夠入味，好吃的讓你一直想念🌈🌈


吃起來像肉乾，其實是香菇頭🤭🤭
營養香菇製成，香氣💯分
🉐全素食也能吃的紅燒香菇頭
💟嘴饞救星💟陪你追劇看電視
鹹香味道也很適合當下酒菜喔🍻


成分：香菇、砂糖、甘油、大豆油、醬油【黃豆、小麥、食鹽、砂糖、水、調味料(琥珀酸二鈉、5’-次黃嘌呤核苷磷酸二鈉、5’-鳥嘌呤核苷磷酸二鈉)、甜味劑(醋磺內酯鉀)】、豆粉、L-麩酸鈉、鹽、甘草、桂由、五香粉(小茴、大茴、丁香、桂皮、甘松、三奈)麥芽糊精、中鏈三酸甘油酯、辛烯基丁二酸鈉澱粉、香料、防腐劑(已二烯酸鉀)
重量：150g
產地：台灣
保存期限：1年
保存方式：請置於低溫乾燥處，開封後請盡快食用完畢
※本產品含大豆、麩質的穀類製品，不適合其過敏體質者食用
※全素可食
"""
    price = "99"    # 商品價格 (字串或整數均可)
    stock = "191"  # 庫存 (原先爬到為 -191, 請自行決定是否保留負值)

    #--------------------------------------------------
    # 2. 取得資料夾內的圖片 (downloaded_images/*.jpg)
    #--------------------------------------------------
    # 假設要依檔名順序對應到 商品圖片1 ~ 8 (看你的圖數量)
    img_folder = "downloaded_images"
    img_files = sorted(glob.glob(os.path.join(img_folder, "*.jpg")))

    # 最多放 8 張 (自行決定)
    # 填入時會把「反斜線」改成「/」，以防部分平台對路徑格式敏感
    image_paths = [p.replace("\\", "/") for p in img_files[:8]]

    # 若需要上傳到網路，則要是「圖片連結 (URL)」。
    # 若題目只是示範把檔案路徑填入欄位，可直接用本機路徑。

    #--------------------------------------------------
    # 3. 根據題目欄位排列，準備 DataFrame
    #--------------------------------------------------

    columns = [
        "分類","商品名稱","商品描述","最高購買數量","最高購買數量 - 循環週期的開始日期","最高購買數量 - 循環週期的天數",
        "最高購買數量 - 循環週期的結束日期","最低購買數量","主商品貨號","商品規格識別碼","規格名稱 1","規格選項 1",
        "規格圖片","規格名稱 2","規格選項 2","價格","庫存","商品選項貨號","新版尺寸表","圖片尺寸表","GTIN",
        "主商品圖片","商品圖片 1","商品圖片 2","商品圖片 3","商品圖片 4","商品圖片 5","商品圖片 6","商品圖片 7",
        "商品圖片 8","重量","長度","寬度","高度","黑貓宅急便","7-ELEVEN","全家","萊爾富","全家冷凍超取(不寄送離島地區)",
        "宅配通","OK Mart","蝦皮店到店","店到家宅配","嘉里快遞","蝦皮店到店 - 隔日到貨","賣家宅配：箱購","賣家宅配：冷凍","較長備貨天數"
    ]

    # 運送方式：題目要求「賣家宅配：冷凍=關閉」、「全家冷凍超取=關閉」，其他運送方式先設為「開啟」
    # 較長備貨天數 => "否"
    # 其餘無資料的欄位空白
    row_data = {
        "分類": category,
        "商品名稱": product_name,
        "商品描述": product_desc,
        "最高購買數量": "",
        "最高購買數量 - 循環週期的開始日期": "",
        "最高購買數量 - 循環週期的天數": "",
        "最高購買數量 - 循環週期的結束日期": "",
        "最低購買數量": "",
        "主商品貨號": "",
        "商品規格識別碼": "",
        "規格名稱 1": "",
        "規格選項 1": "",
        "規格圖片": "",
        "規格名稱 2": "",
        "規格選項 2": "",
        "價格": price,
        "庫存": stock,
        "商品選項貨號": "",
        "新版尺寸表": "",
        "圖片尺寸表": "",
        "GTIN": "",
        # 主商品圖片 -> 取第一張當 "主圖"，若無圖則空白
        "主商品圖片": image_paths[0] if len(image_paths) >= 1 else "",
        # 依序放入 商品圖片1~8
        "商品圖片 1": image_paths[1] if len(image_paths) >= 2 else "",
        "商品圖片 2": image_paths[2] if len(image_paths) >= 3 else "",
        "商品圖片 3": image_paths[3] if len(image_paths) >= 4 else "",
        "商品圖片 4": image_paths[4] if len(image_paths) >= 5 else "",
        "商品圖片 5": image_paths[5] if len(image_paths) >= 6 else "",
        "商品圖片 6": image_paths[6] if len(image_paths) >= 7 else "",
        "商品圖片 7": image_paths[7] if len(image_paths) >= 8 else "",
        "商品圖片 8": "",
        "重量": "",
        "長度": "",
        "寬度": "",
        "高度": "",
        "黑貓宅急便": "開啟",
        "7-ELEVEN": "開啟",
        "全家": "開啟",
        "萊爾富": "開啟",
        "全家冷凍超取(不寄送離島地區)": "關閉",
        "宅配通": "開啟",
        "OK Mart": "開啟",
        "蝦皮店到店": "開啟",
        "店到家宅配": "開啟",
        "嘉里快遞": "開啟",
        "蝦皮店到店 - 隔日到貨": "開啟",
        "賣家宅配：箱購": "開啟",
        "賣家宅配：冷凍": "關閉",
        "較長備貨天數": "否"
    }

    # 將上述單一商品的 dict，放入 list，以便可能多商品一起寫出
    rows = [row_data]

    df = pd.DataFrame(rows, columns=columns)

    #--------------------------------------------------
    # 4. 輸出 CSV
    #--------------------------------------------------
    output_filename = "shopee_upload.xlsx"
    # 若要避免 index，也可以加上 index=False
    df.to_excel(output_filename, index=False)
    print(f"[成功] 已產生 CSV：{output_filename}")

if __name__ == "__main__":
    create_shopee_csv()
